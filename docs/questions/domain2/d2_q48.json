{
  "id": "d2_q48",
  "type": "multiple",
  "text": "【複数選択】 Amazon Bedrockでコスト最適化を実現する方法として適切なものを2つ選択してください。",
  "choices": [
    {
      "label": "A",
      "text": "プロビジョンドスループットを使用して予測可能なワークロードのコストを削減"
    },
    {
      "label": "B",
      "text": "常に最大のモデルサイズを使用する"
    },
    {
      "label": "C",
      "text": "プロンプトのキャッシングとバッチ処理を活用"
    },
    {
      "label": "D",
      "text": "全てのリクエストをリアルタイムで処理"
    },
    {
      "label": "E",
      "text": "モデルの選択を用途に応じて最適化（簡単なタスクには小さいモデル）"
    }
  ],
  "correct": [
    0,
    4
  ],
  "explanation": "Amazon Bedrockのコスト最適化には、適切なモデル選択と利用方法の最適化が重要です。\n\n選択肢AとEが正解である理由：\n\nA. プロビジョンドスループットを使用：\n- 予測可能なワークロードに対して、一定期間のスループットを事前に購入することで割引を受けられます\n- オンデマンド価格と比較して大幅なコスト削減が可能\n- 安定したパフォーマンスも確保できます\n\nE. 用途に応じたモデルの最適化：\n- 簡単なタスクには小さいモデル（例：Claude Instant）を使用\n- 複雑なタスクにのみ大きいモデル（例：Claude 3 Opus）を使用\n- タスクの複雑さに応じてモデルを使い分けることで、コストとパフォーマンスのバランスを最適化\n\n他の選択肢が不適切である理由：\n- B: 常に最大のモデルを使用すると、不必要にコストが増大します\n- C: Bedrockは現在、プロンプトのキャッシング機能を提供していません\n- D: バッチ処理が可能な場合は、リアルタイム処理よりもコスト効率的です\n\nその他のコスト最適化のベストプラクティス：\n- プロンプトエンジニアリングによるトークン数の削減\n- 不要なリクエストの削減\n- モニタリングによる使用状況の把握と最適化",
  "resources": []
}