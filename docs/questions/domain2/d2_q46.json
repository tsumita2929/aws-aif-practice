{
  "id": "d2_q46",
  "type": "single",
  "text": "Amazon Bedrockを使用して企業向けチャットボットを構築する際、最も適切なアーキテクチャはどれですか？",
  "choices": [
    {
      "label": "A",
      "text": "Bedrock + Lambda + API Gateway + S3（知識ベース）"
    },
    {
      "label": "B",
      "text": "Bedrock単体で全ての処理を実行"
    },
    {
      "label": "C",
      "text": "EC2上でオープンソースLLMを実行"
    },
    {
      "label": "D",
      "text": "SageMakerで独自のLLMを訓練"
    }
  ],
  "correct": [
    0
  ],
  "explanation": "<h5>詳細解説</h5><p>企業向けチャットボットの構築には、スケーラビリティ、セキュリティ、知識管理を考慮した包括的なアーキテクチャが必要です。</p><h5>選択肢Aが正解である理由</h5><ul><li>Bedrock: 基盤モデル（LLM）へのアクセスを提供し、テキスト生成や理解を担当</li><li>Lambda: サーバーレスでビジネスロジックを実行し、Bedrockへのリクエストを処理</li><li>API Gateway: RESTful APIエンドポイントを提供し、フロントエンドとの通信を管理</li><li>S3（知識ベース）: 企業固有のドキュメントを保存し、Bedrockのナレッジベース機能と連携してRAGを実現</li></ul><h5>このアーキテクチャの利点</h5><ul><li>サーバーレスによる自動スケーリングとコスト最適化</li><li>API Gatewayによる認証・認可の実装</li><li>企業知識の活用によるより正確な回答の生成</li><li>マネージドサービスによる運用負荷の軽減</li></ul><h5>なぜ他の選択肢が間違っているのか</h5><ul><li><strong>B) Bedrock単体で全ての処理を実行:</strong> Bedrockだけでは、APIエンドポイントの提供や認証、ビジネスロジックの実装ができません</li><li><strong>C) EC2上でオープンソースLLMを実行:</strong> EC2でのLLM運用は、スケーリング、メンテナンス、コストの面で非効率的です</li><li><strong>D) SageMakerで独自のLLMを訓練:</strong> 独自LLMの訓練は時間とコストがかかり、企業向けチャットボットには過剰な投資となる場合が多いです</li></ul><h5>追加で考慮すべきコンポーネント</h5><ul><li>DynamoDB: 会話履歴の保存</li><li>CloudWatch: ログとモニタリング</li><li>Cognito: ユーザー認証</li></ul>",
  "resources": []
}