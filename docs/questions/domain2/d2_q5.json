{
  "id": "d2_q5",
  "type": "multiple",
  "text": "Amazon Bedrockでコスト最適化を実現する方法として適切なものを2つ選択してください。",
  "choices": [
    {
      "label": "A",
      "text": "プロビジョンドスループットを使用して予測可能なワークロードのコストを削減"
    },
    {
      "label": "B",
      "text": "常に最大のモデルサイズを使用する"
    },
    {
      "label": "C",
      "text": "プロンプトのキャッシングとバッチ処理を活用"
    },
    {
      "label": "D",
      "text": "全てのリクエストをリアルタイムで処理"
    },
    {
      "label": "E",
      "text": "モデルの選択を用途に応じて最適化（簡単なタスクには小さいモデル）"
    }
  ],
  "correct": [
    0,
    4
  ],
  "explanation": "<h5>詳細解説</h5><p>Bedrockのコスト最適化には、適切なプロビジョニングとモデル選択が重要です。正解はA「プロビジョンドスループットを使用して予測可能なワークロードのコストを削減」とE「モデルの選択を用途に応じて最適化」です。</p><h5>コスト最適化戦略の詳細</h5><ul><li><strong>A: プロビジョンドスループット（正解）</strong><ul><li>予測可能なワークロードで最大50%のコスト削減</li><li>コミットメント期間：1ヶ月または6ヶ月</li><li>安定したトラフィックパターンに最適</li><li>SLAの保証付き</li></ul></li><li><strong>E: モデルの適切な選択（正解）</strong><ul><li>簡単なタスク：Claude Instant、Titan Express（低コスト）</li><li>複雑なタスク：Claude 2、Titan Premier（高性能）</li><li>用途に応じた最適化で30-70%のコスト削減可能</li></ul></li></ul><h5>なぜ他の選択肢が間違っているのか</h5><ul><li><strong>B) 常に最大のモデルサイズを使用する:</strong> 不必要に高コストとなり、コスト最適化に反する</li><li><strong>C) プロンプトのキャッシングとバッチ処理を活用:</strong> Bedrockは現在キャッシング機能を提供していない</li><li><strong>D) 全てのリクエストをリアルタイムで処理:</strong> バッチ処理可能なタスクもリアルタイムで処理するのは非効率</li></ul><h5>コスト計算例</h5><pre><code># オンデマンド料金の例\nClaude 2: $0.01102/1Kトークン（入力）\nClaude Instant: $0.00163/1Kトークン（入力）\n\n# 月間100Mトークンの場合\nオンデマンド（Claude 2）: $1,102/月\nプロビジョンド（40%削減）: $661/月\nClaude Instant使用: $163/月（85%削減）</code></pre><h5>ベストプラクティス</h5><ul><li>ワークロードの分析と予測</li><li>タスクの複雑さに応じたモデル選択</li><li>定期的なコスト分析とモデルの見直し</li><li>CloudWatchによる使用量モニタリング</li></ul>",
  "resources": []
}