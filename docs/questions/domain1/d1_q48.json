{
  "id": "d1_q48",
  "type": "multiple",
  "text": "【複数選択】 プロンプトエンジニアリングのベストプラクティスとして適切なものを2つ選択してください。",
  "choices": [
    {
      "label": "A",
      "text": "できるだけ曖昧な指示を与える"
    },
    {
      "label": "B",
      "text": "Few-shot学習のための具体例を含める"
    },
    {
      "label": "C",
      "text": "Chain-of-Thought（CoT）プロンプティングで推論過程を明示させる"
    },
    {
      "label": "D",
      "text": "プロンプトは常に1文以内に収める"
    },
    {
      "label": "E",
      "text": "タスクの制約条件や期待する出力形式を明確に指定する"
    }
  ],
  "correct": [
    1,
    2
  ],
  "explanation": "<h3>プロンプトエンジニアリングのベストプラクティス</h3><p>効果的なプロンプトエンジニアリングには、<strong>Few-shot学習のための具体例を含める</strong>ことと、<strong>Chain-of-Thought（CoT）プロンプティングで推論過程を明示させる</strong>ことが重要です。</p><h4>正解の詳細説明</h4><ul><li><strong>B: Few-shot学習</strong><ul><li>タスクの具体例を2-5個程度提示することで、モデルがパターンを理解</li><li>例: 「感情分析：『素晴らしい製品です』→ポジティブ、『期待外れでした』→ネガティブ」</li></ul></li><li><strong>C: Chain-of-Thought (CoT)</strong><ul><li>「ステップバイステップで考えてください」などの指示を追加</li><li>複雑な問題解決や数学的推論で特に効果的</li></ul></li></ul><h4>なぜ他の選択肢が不適切か</h4><ul><li><strong>A: 曖昧な指示</strong> - 逆効果。明確で具体的な指示が必要</li><li><strong>D: 1文以内</strong> - 複雑なタスクでは詳細な指示が必要</li><li><strong>E: 制約条件の指定</strong> - 重要ですが、この問題では選択肢として最適ではありません</li></ul><h4>実践的なプロンプト例</h4><pre>タスク: 以下のレビューの感情を分析してください。\n\n例1: 「このカメラは画質が素晴らしく、使いやすい」→ ポジティブ\n例2: 「バッテリーの持ちが悪く、重すぎる」→ ネガティブ\n\nステップバイステップで分析してください：\n1. レビューの主要な意見を特定\n2. ポジティブ/ネガティブな表現を抽出\n3. 全体的な感情を判定\n\nレビュー: [ここに分析対象のテキスト]</pre>",
  "resources": []
}