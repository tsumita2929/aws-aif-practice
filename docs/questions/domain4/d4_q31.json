{
  "id": "d4_q31",
  "type": "single",
  "text": "「モデルの解釈可能性」と「性能」のバランスを取る方法として適切なものはどれですか？",
  "choices": [
    {
      "label": "A",
      "text": "常に最も複雑なモデルを選ぶ"
    },
    {
      "label": "B",
      "text": "ユースケースに応じて適切なモデルを選択し、必要に応じて説明手法を追加"
    },
    {
      "label": "C",
      "text": "解釈可能性を完全に無視する"
    },
    {
      "label": "D",
      "text": "常に線形モデルのみを使用する"
    }
  ],
  "correct": [
    1
  ],
  "explanation": "正解はB: ユースケースに応じて適切なモデルを選択し、必要に応じて説明手法を追加です。\n\n解釈可能性と性能のバランスは、MLプロジェクトの成功において重要な要素です。ユースケースの要件に基づいて、適切なトレードオフを見つけることが必要です。\n\n各選択肢の解説：\nA) 常に最も複雑なモデルを選ぶ - これは誤りです。複雑なモデルは解釈が困難で、規制要件や説明責任を満たせない場合があります。\n\nB) ユースケースに応じて適切なモデルを選択し、必要に応じて説明手法を追加（正解）- バランスの取れたアプローチ：\n  ・ユースケース別の戦略：\n    - 医療診断：解釈可能性を優先（決定木、線形モデル）\n    - 画像認識：性能を優先し、説明手法を追加（Grad-CAM）\n    - 金融審査：規制要件に応じてバランス\n    - 推薦システム：性能重視でも許容される場合が多い\n  ・ハイブリッドアプローチ：\n    - 複雑なモデル＋事後説明（SHAP、LIME）\n    - アンサンブル：解釈可能モデルと高性能モデルの組み合わせ\n    - 階層的モデリング：重要な決定は解釈可能モデル\n    - 代理モデル：複雑なモデルの振る舞いを簡単なモデルで近似\n  ・説明手法の追加：\n    - グローバル説明：モデル全体の動作\n    - ローカル説明：個別予測の根拠\n    - 反実仮想説明：「もし〜だったら」\n    - 特徴重要度の可視化\n\nC) 解釈可能性を完全に無視する - 規制違反、信頼性の欠如、デバッグの困難さにつながります。\n\nD) 常に線形モデルのみを使用する - 複雑な問題では性能が不十分になり、ビジネス価値を損ないます。\n\n実践例：クレジットスコアリングシステムの実装：\n1. 要件分析：\n   - 規制要件：説明可能性が必須（FCRA、ECOA）\n   - 性能要件：AUC > 0.85\n   - ビジネス要件：処理時間 < 100ms\n\n2. モデル選択戦略：\n   ```python\n   # 階層的アプローチ\n   class CreditScoringSystem:\n       def __init__(self):\n           # 第1層：解釈可能なルールベース\n           self.rule_based = DecisionTreeClassifier(max_depth=5)\n           \n           # 第2層：中程度の複雑性\n           self.gradient_boost = XGBoostClassifier()\n           \n           # 説明生成器\n           self.explainer = shap.TreeExplainer(self.gradient_boost)\n   ```\n\n3. 説明性の実装：\n   - ルールの抽出と可視化\n   - 拒否理由コードの生成\n   - 個別説明レポート\n   - 監査証跡の保持\n\n4. 性能と解釈性の評価：\n   - 線形モデル：AUC=0.75、完全に解釈可能\n   - 決定木：AUC=0.80、ルールベースで理解可能\n   - XGBoost+SHAP：AUC=0.88、事後説明付き\n   - 選択：XGBoost+SHAP（要件を満たす）\n\n成果：\n・規制要件準拠：100%\n・モデル性能：AUC=0.88\n・顧客満足度：説明付き判定で30%向上\n・監査合格率：100%\n\nこのアプローチにより、高性能と説明可能性を両立させることができます。",
  "resources": []
}