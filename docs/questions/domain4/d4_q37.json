{
  "id": "d4_q37",
  "type": "single",
  "text": "モデルの「ライフサイクル管理」において重要な要素として適切でないものはどれですか？",
  "choices": [
    {
      "label": "A",
      "text": "モデルの登録とバージョニング"
    },
    {
      "label": "B",
      "text": "パフォーマンスの追跡"
    },
    {
      "label": "C",
      "text": "定期的な再評価と更新"
    },
    {
      "label": "D",
      "text": "一度デプロイしたら永久に使用"
    }
  ],
  "correct": [
    3
  ],
  "explanation": "<h5>詳細解説</h5><p>正解はD: 一度デプロイしたら永久に使用です。</p><p>モデルのライフサイクル管理は、MLシステムの長期的な成功に不可欠です。モデルは時間の経過とともに劣化し、新しいデータパターンやビジネス要件に対応できなくなるため、継続的な管理が必要です。</p><h5>各選択肢の解説</h5><p>A) モデルの登録とバージョニング - これはライフサイクル管理の基礎です。変更履歴の追跡、ロールバック、A/Bテストの実施に必須です。</p><p>B) パフォーマンスの追跡 - モデルの性能を継続的に監視し、劣化を早期に検出するために重要です。</p><p>C) 定期的な再評価と更新 - データドリフトや新しい要件に対応するため、定期的なモデルの見直しが必要です。</p><h5>D) 一度デプロイしたら永久に使用（正解）- これはアンチパターンです。モデルの固定化は以下の問題を引き起こします</h5><ul><li>モデルドリフト：</li><li>データ分布の変化による精度低下</li><li>新しいパターンへの対応不能</li><li>季節変動への適応失敗</li><li>技術的陳腐化：</li><li>新しいアルゴリズムの活用不可</li><li>セキュリティ脆弱性の蓄積</li><li>依存ライブラリのサポート終了</li><li>ビジネスインパクト：</li><li>競争優位性の喪失</li><li>顧客満足度の低下</li><li>規制要件への不適合</li></ul><h5>実践例：Eコマース企業のモデルライフサイクル管理</h5><h5>1. モデルレジストリの構築</h5><p>```python</p><p># SageMaker Model Registry</p><p>model_package_group = ModelPackageGroup(</p><p>name='recommendation-models',</p><p>tags=[</p><p>{'Key': 'Stage', 'Value': 'Production'},</p><p>{'Key': 'BusinessUnit', 'Value': 'Ecommerce'}</p><p>]</p><p>)</p><p># モデルの登録</p><p>model_version = register_model(</p><p>model_data=model_artifacts,</p><p>model_metrics={</p><p>'accuracy': 0.92,</p><p>'f1_score': 0.89,</p><p>'latency_p99': 45</p><p>},</p><p>approval_status='PendingManualApproval'</p><p>)</p><p>```</p><h5>2. ライフサイクルステージ</h5><ul><li>開発（Development）：</li><li>新機能の実験</li><li>プロトタイプ作成</li><li>ステージング（Staging）：</li><li>性能評価</li><li>A/Bテスト</li><li>本番（Production）：</li><li>カナリアデプロイ</li><li>段階的ロールアウト</li><li>アーカイブ（Archive）：</li><li>旧モデルの保管</li><li>監査証跡</li></ul><h5>3. パフォーマンスモニタリング</h5><ul><li>リアルタイム指標：</li><li>予測精度</li><li>レイテンシー</li><li>スループット</li><li>ビジネス指標：</li><li>クリック率</li><li>コンバージョン率</li><li>売上貢献</li></ul><h5>4. 自動化された再訓練</h5><p>```yaml</p><p># 再訓練トリガー</p><h5>triggers</h5><ul><li>type: scheduled</li></ul><h5>cron: '0 2 * * 0'  # 週次</h5><ul><li>type: performance</li></ul><h5>condition: accuracy < 0.85</h5><ul><li>type: drift</li></ul><p>threshold: 0.1</p><p>```</p><h5>5. モデルの廃止計画</h5><ul><li>段階的なトラフィック削減</li><li>フォールバックモデルの準備</li><li>ステークホルダーへの通知</li><li>アーカイブと監査証跡</li></ul><h5>成果</h5><ul><li>モデル精度の維持：90%以上を継続</li><li>デプロイ時間：2週間→2時間</li><li>ロールバック成功率：100%</li><li>モデル関連障害：85%削減</li></ul><h5>ベストプラクティス</h5><ul><li>明確なライフサイクルポリシー</li><li>自動化されたワークフロー</li><li>継続的なパフォーマンス評価</li><li>プロアクティブなモデル更新</li></ul><h5>なぜ他の選択肢が間違っているのか</h5><ul><li><strong>B) パフォーマンスの追跡:</strong> 1%のテストデータは少なすぎて、モデルの性能を適切に評価できません。</li><li><strong>C) 定期的な再評価と更新:</strong> 時系列データでは時間的順序を保つ必要があり、ランダム分割は不適切です。</li></ul>",
  "resources": []
}