{
  "id": "d4_q37",
  "type": "single",
  "text": "モデルの「ライフサイクル管理」において重要な要素として適切でないものはどれですか？",
  "choices": [
    {
      "label": "A",
      "text": "モデルの登録とバージョニング"
    },
    {
      "label": "B",
      "text": "パフォーマンスの追跡"
    },
    {
      "label": "C",
      "text": "定期的な再評価と更新"
    },
    {
      "label": "D",
      "text": "一度デプロイしたら永久に使用"
    }
  ],
  "correct": [
    3
  ],
  "explanation": "正解はD: 一度デプロイしたら永久に使用です。\n\nモデルのライフサイクル管理は、MLシステムの長期的な成功に不可欠です。モデルは時間の経過とともに劣化し、新しいデータパターンやビジネス要件に対応できなくなるため、継続的な管理が必要です。\n\n各選択肢の解説：\nA) モデルの登録とバージョニング - これはライフサイクル管理の基礎です。変更履歴の追跡、ロールバック、A/Bテストの実施に必須です。\n\nB) パフォーマンスの追跡 - モデルの性能を継続的に監視し、劣化を早期に検出するために重要です。\n\nC) 定期的な再評価と更新 - データドリフトや新しい要件に対応するため、定期的なモデルの見直しが必要です。\n\nD) 一度デプロイしたら永久に使用（正解）- これはアンチパターンです。モデルの固定化は以下の問題を引き起こします：\n  ・モデルドリフト：\n    - データ分布の変化による精度低下\n    - 新しいパターンへの対応不能\n    - 季節変動への適応失敗\n  ・技術的陳腐化：\n    - 新しいアルゴリズムの活用不可\n    - セキュリティ脆弱性の蓄積\n    - 依存ライブラリのサポート終了\n  ・ビジネスインパクト：\n    - 競争優位性の喪失\n    - 顧客満足度の低下\n    - 規制要件への不適合\n\n実践例：Eコマース企業のモデルライフサイクル管理：\n1. モデルレジストリの構築：\n   ```python\n   # SageMaker Model Registry\n   model_package_group = ModelPackageGroup(\n       name='recommendation-models',\n       tags=[\n           {'Key': 'Stage', 'Value': 'Production'},\n           {'Key': 'BusinessUnit', 'Value': 'Ecommerce'}\n       ]\n   )\n   \n   # モデルの登録\n   model_version = register_model(\n       model_data=model_artifacts,\n       model_metrics={\n           'accuracy': 0.92,\n           'f1_score': 0.89,\n           'latency_p99': 45\n       },\n       approval_status='PendingManualApproval'\n   )\n   ```\n\n2. ライフサイクルステージ：\n   - 開発（Development）：\n     - 新機能の実験\n     - プロトタイプ作成\n   \n   - ステージング（Staging）：\n     - 性能評価\n     - A/Bテスト\n   \n   - 本番（Production）：\n     - カナリアデプロイ\n     - 段階的ロールアウト\n   \n   - アーカイブ（Archive）：\n     - 旧モデルの保管\n     - 監査証跡\n\n3. パフォーマンスモニタリング：\n   - リアルタイム指標：\n     - 予測精度\n     - レイテンシー\n     - スループット\n   \n   - ビジネス指標：\n     - クリック率\n     - コンバージョン率\n     - 売上貢献\n\n4. 自動化された再訓練：\n   ```yaml\n   # 再訓練トリガー\n   triggers:\n     - type: scheduled\n       cron: '0 2 * * 0'  # 週次\n     - type: performance\n       condition: accuracy < 0.85\n     - type: drift\n       threshold: 0.1\n   ```\n\n5. モデルの廃止計画：\n   - 段階的なトラフィック削減\n   - フォールバックモデルの準備\n   - ステークホルダーへの通知\n   - アーカイブと監査証跡\n\n成果：\n・モデル精度の維持：90%以上を継続\n・デプロイ時間：2週間→2時間\n・ロールバック成功率：100%\n・モデル関連障害：85%削減\n\nベストプラクティス：\n・明確なライフサイクルポリシー\n・自動化されたワークフロー\n・継続的なパフォーマンス評価\n・プロアクティブなモデル更新",
  "resources": []
}