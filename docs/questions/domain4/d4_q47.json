{
  "id": "d4_q47",
  "type": "multiple",
  "text": "【複数選択】 LLMベースのアプリケーションのセキュリティ対策として重要なものを2つ選択してください。",
  "choices": [
    {
      "label": "A",
      "text": "プロンプトインジェクション攻撃への対策"
    },
    {
      "label": "B",
      "text": "入力の検証とサニタイゼーション"
    },
    {
      "label": "C",
      "text": "全ての出力をそのまま信頼する"
    },
    {
      "label": "D",
      "text": "APIキーをフロントエンドコードに埋め込む"
    },
    {
      "label": "E",
      "text": "モデルへのアクセスを無制限に許可する"
    }
  ],
  "correct": [
    0,
    1
  ],
  "explanation": "<h5>詳細解説</h5><p>正解：A) プロンプトインジェクション攻撃への対策、B) 入力の検証とサニタイゼーション</p><h5>LLMベースのアプリケーションには特有のセキュリティリスクがあります</h5><p>1. プロンプトインジェクション攻撃への対策：悪意のある入力によるプロンプトの改変を防ぐ</p><p>2. 入力の検証とサニタイゼーション：有害なコンテンツや個人情報をフィルタリング</p><p>APIキーは必ずバックエンドで管理し、出力は検証してから使用することが重要です。</p><h5>なぜ他の選択肢が間違っているのか</h5><ul><li><strong>C) 全ての出力をそのまま信頼する:</strong> ノーフリーランチ定理により、すべての問題に最適な単一の手法は存在しません。</li></ul>",
  "resources": []
}