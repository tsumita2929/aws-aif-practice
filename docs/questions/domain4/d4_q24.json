{
  "id": "d4_q24",
  "type": "single",
  "text": "MLプロジェクトにおける「データのバージョン管理」が重要な理由は何ですか？",
  "choices": [
    {
      "label": "A",
      "text": "ストレージコストを増やすため"
    },
    {
      "label": "B",
      "text": "実験の再現性とモデルの追跡可能性を確保するため"
    },
    {
      "label": "C",
      "text": "データを失うため"
    },
    {
      "label": "D",
      "text": "開発を遅らせるため"
    }
  ],
  "correct": [
    1
  ],
  "explanation": "正解はB: 実験の再現性とモデルの追跡可能性を確保するためです。\n\nデータのバージョン管理は、MLプロジェクトの科学的厳密性と運用の信頼性を保証する基盤です。コードだけでなくデータも管理することで、実験結果の再現と問題の追跡が可能になります。\n\n各選択肢の解説：\nA) ストレージコストを増やすため - これは副作用であり、目的ではありません。効率的な差分管理により、コスト増加は最小限に抑えられます。\n\nB) 実験の再現性とモデルの追跡可能性を確保するため（正解）- データバージョン管理の重要性：\n  ・実験の再現性：\n    - 過去の実験を正確に再現\n    - 科学的検証の実現\n    - バグの原因特定\n  ・モデルの追跡可能性：\n    - データとモデルの紐付け\n    - 性能変化の原因分析\n    - 規制要件への対応\n  ・コラボレーション：\n    - チーム間でのデータ共有\n    - 変更履歴の明確化\n    - コンフリクトの解決\n\nC) データを失うため - これは誤りです。バージョン管理はデータの保護と復元を可能にします。\n\nD) 開発を遅らせるため - 初期設定には時間がかかりますが、長期的には開発を加速します。\n\n実践例：金融機関での不正検知モデル開発：\n1. データバージョン管理ツール：\n   - DVC（Data Version Control）\n   - MLflow\n   - AWS S3のバージョニング機能\n\n2. 実装例（DVC使用）：\n   ```bash\n   # データの追加とバージョン管理\n   dvc add data/transactions_2024.csv\n   git add data/transactions_2024.csv.dvc\n   git commit -m \"Add Q1 2024 transaction data\"\n   \n   # 特定バージョンへの切り替え\n   git checkout v1.2.0\n   dvc checkout\n   ```\n\n3. メタデータ管理：\n   - データソースと取得日時\n   - 前処理のパラメータ\n   - データ品質メトリクス\n   - スキーマのバージョン\n\n4. ベストプラクティス：\n   - データパイプラインの自動化\n   - 変更の承認プロセス\n   - 定期的なデータ監査\n   - GDPR準拠の削除機能\n\n成果：\n・実験の再現成功率：100%\n・デバッグ時間：70%削減\n・規制監査への対応時間：80%短縮\n・チーム間の連携効率：2倍向上\n\nデータバージョン管理により、MLプロジェクトの透明性と信頼性が大幅に向上します。",
  "resources": []
}