{
  "id": "d4_q46",
  "type": "single",
  "text": "プロダクション環境でLLMを使用する際のレート制限とエラーハンドリングのベストプラクティスはどれですか？",
  "choices": [
    {
      "label": "A",
      "text": "エラーが発生したら即座にリトライする"
    },
    {
      "label": "B",
      "text": "指数バックオフ、サーキットブレーカー、フォールバック戦略の実装"
    },
    {
      "label": "C",
      "text": "レート制限は考慮しない"
    },
    {
      "label": "D",
      "text": "全てのエラーをユーザーに表示する"
    }
  ],
  "correct": [
    1
  ],
  "explanation": "<h5>詳細解説</h5><p>正解：B) 指数バックオフ、サーキットブレーカー、フォールバック戦略の実装</p><h5>LLMのプロダクション利用では堅牢なエラーハンドリングが必要です</h5><p>1. 指数バックオフ：リトライ間隔を徐々に増やしサービスへの負荷を軽減</p><p>2. サーキットブレーカー：連続したエラー時にサービスを一時的に遮断</p><p>3. フォールバック戦略：代替モデルやキャッシュされた結果の利用</p><p>これらの実装により、安定したサービス提供が可能になります。</p><h5>なぜ他の選択肢が間違っているのか</h5><ul><li><strong>C) レート制限は考慮しない:</strong> 時系列データには特有の前処理（差分、定常化など）が必要です。</li><li><strong>D) 全てのエラーをユーザーに表示する:</strong> 将来予測には過去データのパターンが将来も続くという仮定があり、限界があります。</li></ul>",
  "resources": []
}