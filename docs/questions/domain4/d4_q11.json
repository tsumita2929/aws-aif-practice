{
  "id": "d4_q11",
  "type": "single",
  "text": "継続的な機械学習（MLOps）の実践において重要な要素として適切でないものはどれですか？",
  "choices": [
    {
      "label": "A",
      "text": "モデルのバージョン管理"
    },
    {
      "label": "B",
      "text": "自動化されたテストパイプライン"
    },
    {
      "label": "C",
      "text": "手動でのデプロイメントプロセス"
    },
    {
      "label": "D",
      "text": "パフォーマンスメトリクスの継続的モニタリング"
    }
  ],
  "correct": [
    2
  ],
  "explanation": "<h5>詳細解説</h5><p>正解はC: 手動でのデプロイメントプロセスです。</p><p>MLOps（Machine Learning Operations）は、機械学習モデルの開発から運用までのライフサイクルを効率化する実践です。手動でのデプロイメントはMLOpsの原則に反し、エラーの原因となりやすく、スケーラビリティを阻害します。</p><h5>各選択肢の解説</h5><p>A) モデルのバージョン管理 - これはMLOpsの重要な要素です。モデルのバージョン管理により、変更の追跡、ロールバック、A/Bテストなどが可能になります。Amazon SageMaker Model Registryでは、モデルのバージョンを一元管理できます。</p><p>B) 自動化されたテストパイプライン - これもMLOpsの基本です。モデルの品質を保証するために、データ検証、モデルバリデーション、パフォーマンステストなどを自動化します。</p><h5>C) 手動でのデプロイメントプロセス（正解）- 手動デプロイメントは以下の問題を引き起こします</h5><ul><li>ヒューマンエラーのリスクが高い</li><li>デプロイに時間がかかる</li><li>再現性が低い</li><li>スケールが難しい</li></ul><p>MLOpsではCI/CDパイプラインを使用してデプロイメントを自動化します。</p><p>D) パフォーマンスメトリクスの継続的モニタリング - これはMLOpsの不可欠な要素です。モデルの精度、レイテンシー、データドリフトなどを監視し、問題を早期に検出します。</p><p>実践例：Amazon SageMaker Pipelinesを使用すると、データの前処理からモデルの訓練、評価、デプロイまでの全プロセスを自動化できます。これにより、データサイエンティストはモデルの改善に集中でき、運用チームは安定したデプロイメントを保証できます。</p><h5>なぜ他の選択肢が間違っているのか</h5><ul><li><strong>A) モデルのバージョン管理:</strong> データのコピーはセキュリティリスクを増大させ、管理の複雑さも増します。</li><li><strong>D) パフォーマンスメトリクスの継続的モニタリング:</strong> セキュリティは初期段階から組み込むべきで、後から追加するアプローチは脆弱性を生む可能性があります。</li></ul>",
  "resources": []
}