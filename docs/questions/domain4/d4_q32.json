{
  "id": "d4_q32",
  "type": "single",
  "text": "次のシナリオを考えてください： 「小売業で在庫最適化AIを導入したが、季節変動への対応が課題」 最も適切なアプローチはどれですか？",
  "choices": [
    {
      "label": "A",
      "text": "季節性を無視する"
    },
    {
      "label": "B",
      "text": "時系列分解、季節性を考慮した特徴量エンジニアリング"
    },
    {
      "label": "C",
      "text": "年間通して同じモデルを使用"
    },
    {
      "label": "D",
      "text": "AIの使用を中止する"
    }
  ],
  "correct": [
    1
  ],
  "explanation": "<h5>詳細解説</h5><p>正解はB: 時系列分解、季節性を考慮した特徴量エンジニアリングです。</p><p>小売業の在庫最適化では、季節変動は避けられない重要な要素です。これを適切にモデルに組み込むことで、在庫切れと過剰在庫の両方を防ぎ、収益性を大幅に改善できます。</p><h5>各選択肢の解説</h5><p>A) 季節性を無視する - これは致命的な誤りです。クリスマス商品を夏に大量発注するような失敗につながります。</p><h5>B) 時系列分解、季節性を考慮した特徴量エンジニアリング（正解）- 効果的な季節性対応</h5><ul><li>時系列分解：</li><li>トレンド成分：長期的な売上傾向</li><li>季節成分：年次、月次、週次パターン</li><li>不規則成分：プロモーションやイベント</li><li>STL分解（Seasonal and Trend decomposition using Loess）</li><li>特徴量エンジニアリング：</li><li>暦特徴：月、曜日、祝日フラグ</li><li>周期的エンコーディング：sin/cos変換</li><li>ラグ特徴：前年同期比、移動平均</li><li>イベント特徴：セール、天候、地域イベント</li><li>モデリング手法：</li><li>Prophet：Facebook開発の季節性対応モデル</li><li>SARIMA：季節性ARIMA</li><li>LightGBM with季節特徴</li><li>ディープラーニング：LSTM、Transformer</li></ul><p>C) 年間通して同じモデルを使用 - 季節による需要パターンの変化に対応できず、予測精度が低下します。</p><p>D) AIの使用を中止する - 問題から逃げることになり、競争優位性を失います。</p><h5>実践例：アパレル小売チェーンの在庫最適化</h5><h5>1. データ分析と前処理</h5><p>```python</p><p># 時系列分解</p><p>from statsmodels.tsa.seasonal import STL</p><p>stl = STL(sales_data, seasonal=13)  # 週次データ</p><p>result = stl.fit()</p><p>trend = result.trend</p><p>seasonal = result.seasonal</p><p>residual = result.resid</p><p>```</p><h5>2. 特徴量エンジニアリング</h5><ul><li>基本的な時間特徴：</li><li>day_of_week, month, quarter</li><li>is_weekend, is_holiday</li><li>days_to_christmas, days_to_black_friday</li><li>周期的エンコーディング：</li></ul><p>```python</p><p>df['month_sin'] = np.sin(2 * np.pi * df['month'] / 12)</p><p>df['month_cos'] = np.cos(2 * np.pi * df['month'] / 12)</p><h5>```</h5><ul><li>動的特徴：</li><li>気温、降水量</li><li>競合店のプロモーション</li><li>SNSトレンド指標</li></ul><h5>3. モデル実装</h5><ul><li>短期予測（1-4週）：XGBoostWithカスタム特徴</li><li>中期予測（1-3ヶ月）：Prophet</li><li>長期予測（3-12ヶ月）：アンサンブルモデル</li></ul><h5>4. 在庫戦略の最適化</h5><ul><li>商品カテゴリ別の季節係数</li><li>安全在庫の動的調整</li><li>自動発注点の季節調整</li></ul><h5>成果</h5><ul><li>在庫回転率：年6回→年9回（50%改善）</li><li>在庫切れ率：8%→2%（75%削減）</li><li>過剰在庫：15%→5%（67%削減）</li><li>売上総利益率：3.5%向上</li></ul><h5>季節変動パターンの例</h5><ul><li>冬物衣料：10-2月がピーク</li><li>水着：5-7月に集中</li><li>学用品：3月と8月にスパイク</li><li>ギフト商品：12月が年間売上の40%</li></ul><p>この包括的なアプローチにより、季節変動を正確に予測し、在庫を最適化できます。</p><h5>なぜ他の選択肢が間違っているのか</h5><ul><li><strong>C) 年間通して同じモデルを使用:</strong> アンサンブル学習にも過学習のリスクがあり、適切な設計が必要です。</li><li><strong>D) AIの使用を中止する:</strong> アンサンブルモデルは個々のモデルより解釈が困難になることが一般的です。</li></ul>",
  "resources": []
}